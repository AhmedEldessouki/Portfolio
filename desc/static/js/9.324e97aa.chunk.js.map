{"version":3,"sources":["components/Utils/Carousel/Carousel.js","components/Projects/ProjectDetails.js","components/Projects/ProjectsSummary.js","components/Projects/Projects.js","components/Utils/PopUp/PopUp.js","components/Projects/utils.js","Config/CloudInary.js"],"names":["Carousel","imgArray","imgAlt","React","useState","currentImage","setCurrentImage","cWrapper","css","mq","phoneLarge","btn","colors","darkBlue","kindaDarkBlue","whiteFaded","leftS","rightS","disabledBTN","burgundyRed","carouselNav","type","onClick","data-testid","disabled","href","width","height","alt","fit","src","map","data","forKC","key","length","ProjectDetails","project","projectLogo","projectName","projectLink","description","authorFirstName","authorLastName","spinner","ProjectsSummary","forHeader","weights","medium","independenceBlue","aliceLightBlue","Projects","useAuth","authData","setPorj","setProject","useQuery","queryKey","queryFn","a","db","collection","get","then","querySnapshot","docs","doc","id","err","status","error","projectsData","message","pWrapper","mWrapper","Fragment","btnStyle","h1XL","to","onFocus","style","color","lightBlue","fontSize","PopUp","title","fn","deleteProject","background","border","popWrapper","btnTrash","black","useAsync","dispatch","createNewProject","add","createdAt","Date","toast","success","catch","updateProject","update","updatedOn","delete","uploadImage","image","formData","FormData","set","process","axios","post","headers","res","secure_url","name","ImageDropZone","handleDrop","onDrop","accept","multiple","maxSize","getRootProps","getInputProps","htmlFor","labelWrapper","textArea","useSafeDispatch","mounted","current","reducer","state","payload","imagesFile","imagesDisplay","file","array","index","splice","push","Error","Button","DisplayingImages","oldImages","handleClick","imgWrap","xyz","hStyle","div","i","crop","ProjInput","props","setState","Input","value","onChange","e","target"],"mappings":"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","file":"static/js/9.324e97aa.chunk.js","sourcesContent":["/** @jsxRuntime classic */\n/** @jsx jsx */\n\nimport {jsx, css} from '@emotion/react'\nimport React from 'react'\nimport {Image} from 'cloudinary-react'\n\nimport {colors, mq} from '../../Styles'\n\nfunction Carousel({imgArray, imgAlt}) {\n  const [currentImage, setCurrentImage] = React.useState(0)\n\n  const cWrapper = css`\n    width: 100%;\n    display: grid;\n    place-items: center;\n    height: 440px;\n    a {\n      color: transparent;\n      justify-self: center;\n      grid-row: 1 / span 4;\n      grid-column: 2 / span 3;\n      img {\n        margin: 0;\n      }\n    }\n    ${mq.phoneLarge} {\n      a {\n        grid-row: 1;\n        grid-column: 1;\n      }\n    }\n  `\n\n  const btn = css`\n    border: 0 solid;\n    background: ${colors.darkBlue};\n    color: ${colors.kindaDarkBlue};\n    font-weight: 900;\n    padding: 0 47px;\n    opacity: 0.6;\n    font-size: 4rem;\n    cursor: pointer;\n    :hover {\n      background: ${colors.whiteFaded};\n    }\n  `\n  const leftS = css`\n    grid-row: 1 / span 5;\n    grid-column: 1;\n    justify-self: start;\n    ${mq.phoneLarge} {\n      display: none;\n    }\n  `\n\n  const rightS = css`\n    grid-row: 1 / span 5;\n    grid-column: 5;\n    justify-self: end;\n    ${mq.phoneLarge} {\n      display: none;\n    }\n  `\n\n  const disabledBTN = css`\n    border: 0 solid;\n    background: ${colors.burgundyRed};\n    color: ${colors.whiteFaded};\n    font-weight: 900;\n    padding: 0 47px;\n    opacity: 0.6;\n    font-size: 4rem;\n    ${mq.phoneLarge} {\n      display: none;\n    }\n  `\n  const carouselNav = css`\n    border: 0 solid ${colors.darkBlue};\n    border-radius: 50%;\n    width: 1rem;\n    height: 1rem;\n    background: ${colors.darkBlue};\n    margin: 0 5px 10px;\n    cursor: pointer;\n    :hover,\n    :focus {\n      background: ${colors.whiteFaded};\n    }\n  `\n  return (\n    <div css={cWrapper}>\n      <button\n        type=\"button\"\n        css={[currentImage === 0 ? disabledBTN : btn, leftS]}\n        onClick={() =>\n          currentImage !== 0 ? setCurrentImage(currentImage - 1) : null\n        }\n        data-testid=\"previous\"\n        disabled={currentImage === 0}\n      >\n        {'<'}\n      </button>\n\n      <a href={imgArray[currentImage]}>\n        <Image\n          width=\"450\"\n          height=\"400\"\n          alt={imgAlt}\n          fit=\"contain\"\n          src={`https://images.weserv.nl/?url=${imgArray[currentImage]}&w=450&h=380&fit=contain`}\n        />\n      </a>\n      <section\n        css={css`\n          justify-self: center;\n          grid-row: 5;\n          grid-column: 2 / span 3;\n          ${mq.phoneLarge} {\n            grid-row: 2;\n            grid-column: 1;\n          }\n        `}\n      >\n        {imgArray.map((data, forKC) => (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            key={data}\n            type=\"button\"\n            onClick={() => setCurrentImage(forKC)}\n            data-testid={`btn${forKC}`}\n            css={[\n              carouselNav,\n              currentImage === forKC\n                ? css`\n                    background: ${colors.whiteFaded};\n                    outline: none;\n                  `\n                : null,\n            ]}\n          />\n        ))}\n      </section>\n      <button\n        type=\"button\"\n        data-testid=\"next\"\n        css={[currentImage === imgArray.length - 1 ? disabledBTN : btn, rightS]}\n        onClick={() =>\n          currentImage !== imgArray.length\n            ? setCurrentImage(currentImage + 1)\n            : null\n        }\n        disabled={currentImage === imgArray.length - 1}\n      >\n        {'>'}\n      </button>\n    </div>\n  )\n}\n\nexport default Carousel\n","/** @jsxRuntime classic */\n/** @jsx jsx */\n\nimport {jsx, css} from '@emotion/react'\nimport * as React from 'react'\n\nimport Carousel from '../Utils/Carousel/Carousel'\nimport {colors, spinner} from '../Styles'\n\nconst ProjectDetails = ({project}) => {\n  return project ? (\n    <React.Fragment>\n      <Carousel imgArray={project.projectLogo} imgAlt={project.projectName} />\n      <div\n        css={css`\n          display: flex;\n          flex-direction: column;\n          padding: 10px 50px 33px;\n          place-content: center;\n          min-height: 241px;\n          border-bottom: 24px solid ${colors.darkBlue};\n        `}\n      >\n        <h1\n          css={css`\n            font-size: 2.75rem;\n            font-weight: 900;\n            color: #e9f1f7;\n            padding-left: 0;\n            border-radius: 7.5%;\n          `}\n        >\n          <a href={project.projectLink}>{project.projectName}</a>\n        </h1>\n        <p\n          css={css`\n            padding: 0 5%;\n            font-size: 1.45rem;\n            letter-spacing: 2.4px;\n          `}\n        >\n          {project.description}\n        </p>\n        <div\n          css={css`\n            display: flex;\n            place-content: space-between;\n            font-size: 1.1rem;\n            letter-spacing: 1.2px;\n            font-variant: all-petite-caps;\n          `}\n        >\n          <span>\n            Author: {project.authorFirstName} {project.authorLastName}\n          </span>\n          <span>\n            {/* // ToDo: get date from github */}\n            Created At: April 2020\n          </span>\n        </div>\n      </div>\n    </React.Fragment>\n  ) : (\n    <div\n      css={[\n        spinner,\n        css`\n          margin: 50px 0 0;\n        `,\n      ]}\n    />\n  )\n}\n\nexport default ProjectDetails\n","/** @jsxRuntime classic */\n/** @jsx jsx */\n\nimport {jsx, css} from '@emotion/react'\nimport {Fragment} from 'react'\n\nimport {colors, weights} from '../Styles'\n\nconst ProjectsSummary = ({project}) => {\n  const forHeader = css`\n    color: white;\n    background-color: ${colors.darkBlue};\n    padding: 8% 5%;\n    letter-spacing: 1.4px;\n    font-size: 1.82rem;\n    font-weight: ${weights.medium};\n    :hover,\n    :focus {\n      color: ${colors.independenceBlue};\n      background: ${colors.aliceLightBlue};\n    }\n  `\n\n  return (\n    <Fragment>\n      <h1 css={forHeader}>{project.projectName}</h1>\n      <span\n        css={css`\n          padding: 10px 20px;\n          font-size: 108%;\n          color: ${colors.aliceLightBlue};\n        `}\n      >\n        Add Tags\n      </span>\n    </Fragment>\n  )\n}\n\nexport default ProjectsSummary\n","/** @jsxRuntime classic */\n/** @jsx jsx */\n\nimport {jsx, css} from '@emotion/react'\nimport React from 'react'\nimport {Link} from 'react-router-dom'\nimport {FaPen} from 'react-icons/fa'\n\nimport PopUp from '../Utils/PopUp/PopUp'\nimport {db} from '../Utils/firebase'\nimport {useAuth} from '../Utils/AuthProvider'\nimport {btnStyle, colors, h1XL} from '../Styles'\nimport ProjectDetails from './ProjectDetails'\nimport ProjectsSummary from './ProjectsSummary'\nimport {deleteProject} from './utils'\nimport {useQuery} from 'react-query'\n\nconst Projects = () => {\n  const {authData, setProject: setPorj} = useAuth()\n  const [project, setProject] = React.useState(null)\n  const {status, error, data: projectsData} = useQuery({\n    queryKey: 'projects',\n    queryFn: async () =>\n      await db\n        .collection('projects')\n        .get()\n        .then(\n          querySnapshot => {\n            const data = querySnapshot.docs.map(doc => {\n              return {...doc.data(), id: doc.id}\n            })\n            return data\n          },\n          err => err,\n        ),\n  })\n\n  if (status === 'loading') return 'loading'\n  if (error) throw error.message\n\n  const pWrapper = css`\n    border-bottom: 10px solid ${colors.darkBlue};\n    border-radius: 11%;\n    width: 100%;\n    :hover,\n    :focus {\n      border-bottom-color: ${colors.aliceLightBlue};\n    }\n  `\n  const mWrapper = css`\n    margin: 0 10px;\n    padding: 20px 10px;\n    display: grid;\n    grid-gap: 25px;\n    justify-content: space-evenly;\n    grid-template-columns: repeat(auto-fit, minmax(231px, 264px));\n  `\n\n  return !project ? (\n    <React.Fragment>\n      <h1 css={h1XL}>Projects</h1>\n      <div css={mWrapper}>\n        {projectsData?.map(project => {\n          return (\n            <div css={pWrapper} key={project.id}>\n              {authData ? (\n                <div\n                  css={css`\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                  `}\n                >\n                  <Link\n                    to={`/edit/${project.id}`}\n                    onFocus={() => setPorj(project)}\n                  >\n                    <FaPen\n                      style={{color: colors.lightBlue, fontSize: '1.5rem'}}\n                    />\n                  </Link>\n                  <PopUp\n                    project={project}\n                    title=\"Project\"\n                    fn={() => deleteProject(project)}\n                  />\n                </div>\n              ) : null}\n              <button\n                type=\"button\"\n                onClick={() => setProject(project)}\n                style={{\n                  background: 'transparent',\n                  border: 'none',\n                  width: '100%',\n                }}\n              >\n                <ProjectsSummary project={project} />\n              </button>\n            </div>\n          )\n        })}\n      </div>\n    </React.Fragment>\n  ) : (\n    <React.Fragment>\n      <button css={btnStyle} onClick={() => setProject(null)} type=\"button\">\n        Back\n      </button>\n      <ProjectDetails project={project} />\n    </React.Fragment>\n  )\n}\n// const Projects = React.memo(ProjectsX)\nexport default Projects\n","/** @jsxRuntime classic */\n/** @jsx jsx */\n\nimport {jsx, css} from '@emotion/react'\nimport {Fragment} from 'react'\nimport {GoTrashcan} from 'react-icons/go'\n\nimport {colors, weights} from '../../Styles'\nimport {useAsync} from '../util'\n\nfunction PopUp({title, fn}) {\n  const popWrapper = css`\n    @keyframes fadeIn {\n      from {\n        opacity: 0;\n      }\n      to {\n        opacity: 1;\n      }\n    }\n\n    display: flex;\n    flex-direction: column;\n    place-items: center;\n    position: fixed;\n    top: calc(50% - calc(288.3px / 2));\n    left: calc(50% - calc(554.8px / 2));\n    background-color: ${colors.independenceBlue};\n    opacity: 94.7%;\n    border: 10px solid ${colors.darkBlue};\n    padding: 3% 7%;\n    border-radius: 29%;\n    width: 323px;\n    height: 178px;\n    justify-content: center;\n    align-items: center;\n    animation: fadeIn 0.5s ease-in-out;\n    box-shadow: 0 0 140px 100px ${colors.kindaDarkBlue};\n  `\n  const btn = css`\n    :before {\n      width: 100%;\n    }\n    background-color: ${colors.whiteFaded};\n    color: ${colors.independenceBlue};\n    border-radius: 14%;\n    border: 0px;\n    font-size: 140%;\n    padding: 4px 36px;\n    margin: 0 15px;\n    :hover,\n    :focus {\n      color: ${colors.aliceLightBlue};\n      background-color: ${colors.darkBlue};\n    }\n  `\n  const btnTrash = css`\n    background: inherit;\n    box-shadow: none;\n    border: 0;\n    margin: 0;\n    padding: 0;\n    color: ${colors.aliceLightBlue};\n    font-size: 2rem;\n    font-weight: ${weights.black};\n    :hover,\n    :focus {\n      color: ${colors.burgundyRed};\n    }\n  `\n  const {status, dispatch} = useAsync()\n\n  async function handleDelete() {\n    await fn()\n    dispatch({type: 'idle'})\n  }\n\n  return (\n    <Fragment>\n      {status === 'idle' ? (\n        <button\n          css={btnTrash}\n          type=\"button\"\n          onClick={() => dispatch({type: 'pending'})}\n        >\n          <GoTrashcan />\n        </button>\n      ) : (\n        <div css={popWrapper} id=\"popup\">\n          <header>\n            <h1>Warning</h1>\n          </header>\n          <h2>Do you want to delete this {title}</h2>\n          <footer>\n            <button\n              type=\"button\"\n              css={btn}\n              onClick={() => dispatch({type: 'idle'})}\n            >\n              Nah!\n            </button>\n            <button\n              type=\"button\"\n              css={[\n                btn,\n                css`\n                  :hover {\n                    background-color: ${colors.burgundyRed};\n                  }\n                `,\n              ]}\n              onClick={handleDelete}\n            >\n              Yup!\n            </button>\n          </footer>\n        </div>\n      )}\n    </Fragment>\n  )\n}\n\nexport default PopUp\n","/** @jsxRuntime classic */\n/** @jsx jsx */\n\nimport {jsx, css} from '@emotion/react'\nimport * as React from 'react'\nimport axios from 'axios'\nimport {toast} from 'react-toastify'\nimport Dropzone from 'react-dropzone'\nimport {Image} from 'cloudinary-react'\n\nimport {\n  CLOUDINARY_API_KEY,\n  CLOUDINARY_UPLOAD_PRESET,\n  CLOUDINARY_UPLOAD_URL,\n} from '../../Config/CloudInary'\nimport {\n  btnStyle,\n  colors,\n  h1XL,\n  labelWrapper,\n  mq,\n  spinner,\n  textArea,\n} from '../Styles'\nimport {db} from '../Utils/firebase'\nimport Input from '../Utils/Input'\nimport PopUp from '../Utils/PopUp/PopUp'\n\nfunction createNewProject(project) {\n  db.collection('projects')\n    .add({\n      ...project,\n      createdAt: new Date(),\n    })\n    .then(() => {\n      toast.success(`Project \"${project.projectName}\" Created`)\n    })\n    .catch(err => {\n      toast.error(`Project Creation Failed ${err.message}`)\n      throw err\n    })\n}\n\nfunction updateProject(project) {\n  const {id, projectName, projectLink, projectLogo, description} = project\n  db.collection('projects')\n    .doc(`${id}`)\n    .update({\n      projectName,\n      projectLink,\n      projectLogo,\n      description,\n      updatedOn: new Date(),\n    })\n    .then(() => {\n      toast.success(`Project \"${projectName}\" Updated`)\n    })\n    .catch(err => {\n      toast.error(`Project Didn't Update ${err.message}`)\n      throw err\n    })\n}\n\nfunction deleteProject(project) {\n  db.collection('projects')\n    .doc(`${project.id}`)\n    .delete()\n    .then(() => {\n      toast.success(`Project \"${project.projectName}\" deleted`)\n    })\n    .catch(err => {\n      toast.error(`Project Deletion Failed ${err.message}`)\n      throw err\n    })\n}\n\nfunction uploadImage(image, project) {\n  let formData\n  formData = new FormData()\n  formData.set('file', image)\n  formData.set('tags', [`${project}`, `image`])\n  formData.set('upload_preset', CLOUDINARY_UPLOAD_PRESET)\n  formData.set('api_key', CLOUDINARY_API_KEY)\n\n  return axios\n    .post(CLOUDINARY_UPLOAD_URL, formData, {\n      headers: {'X-Requested-With': 'XMLHttpRequest'},\n    })\n    .then(\n      res => {\n        return res.data.secure_url\n      },\n      err => {\n        toast.error(`Upload of ${image.name}Failed!`)\n        return err\n      },\n    )\n}\n\nfunction ImageDropZone({handleDrop}) {\n  return (\n    <Dropzone onDrop={handleDrop} accept=\"image/*\" multiple maxSize={8000000}>\n      {({getRootProps, getInputProps}) => (\n        <label\n          htmlFor=\"dropZone\"\n          css={[\n            labelWrapper,\n            css`\n              border: 10px dashed ${colors.darkBlue};\n              width: 87%;\n              height: 200px;\n              text-align: center;\n              cursor: pointer;\n              margin-bottom: 20px;\n              margin-right: 0;\n              align-self: flex-end;\n            `,\n          ]}\n          {...getRootProps()}\n        >\n          <span\n            css={[\n              h1XL,\n              css`\n                color: ${colors.aliceLightBlue};\n              `,\n            ]}\n          >\n            Drop Image(s)\n          </span>\n          <input\n            id=\"dropZone\"\n            type=\"file\"\n            name=\"projectLogo\"\n            css={[\n              textArea,\n              css`\n                width: initial;\n                margin: 0;\n              `,\n            ]}\n            {...getInputProps()}\n          />\n        </label>\n      )}\n    </Dropzone>\n  )\n}\n\nfunction useSafeDispatch(dispatch) {\n  const mounted = React.useRef(false)\n\n  React.useLayoutEffect(() => {\n    mounted.current = true\n    return () => (mounted.current = false)\n  }, [])\n\n  return React.useCallback(\n    (...args) => (mounted.current ? dispatch(...args) : void 0),\n    [dispatch],\n  )\n}\n\nconst reducer = (state, {type, payload}) => {\n  const {formData, imagesFile, imagesDisplay} = state\n  switch (type) {\n    case 'images':\n      return {\n        ...state,\n        imagesFile: imagesFile\n          ? [...imagesFile, ...payload.file]\n          : [...payload.file],\n        imagesDisplay: imagesDisplay\n          ? [...imagesDisplay, ...payload.src]\n          : [...payload.src],\n        status: 'idle',\n        error: null,\n      }\n    case 'remove_image':\n      const {array, index} = payload\n      if (array === 'oldImages') formData.projectLogo.splice(index, 1)\n      if (array === 'imagesDisplay') imagesDisplay.splice(index, 1)\n      return {...state}\n    case 'submit_formData':\n      formData.projectName = payload.projectName\n      formData.projectLink = payload.projectLink\n      formData.description = payload.description\n      return {\n        ...state,\n        status: 'submitted',\n        error: null,\n      }\n    case 'submit_description':\n      return {\n        ...state,\n        formData: {...formData, description: payload},\n      }\n\n    case 'idle':\n      return {...state, status: 'idle'}\n    case 'next':\n      return {...state, status: 'next'}\n    case 'images_uploaded':\n      return {...state, status: 'images_uploaded'}\n    case 'next_add':\n      formData.projectLogo.push(payload)\n      return {\n        ...state,\n        status: 'next_add',\n      }\n\n    case 'clean_up':\n      formData.projectName = ''\n      formData.projectLink = ''\n      formData.description = ''\n      formData.projectLogo = []\n      imagesFile.length = 0\n      imagesDisplay.length = 0\n      return {\n        ...state,\n        status: 'idle',\n        error: null,\n      }\n    default: {\n      throw new Error(`Unhandled action type: ${type}`)\n    }\n  }\n}\n\nfunction Button({status, project}) {\n  return status !== 'idle' ? (\n    <div\n      css={css`\n        width: 100%;\n        margin-top: 43px;\n      `}\n    >\n      <div css={spinner} />\n    </div>\n  ) : (\n    <button type=\"submit\" css={btnStyle} disabled={status !== 'idle'}>\n      {project ? 'Edit' : 'Create'} Project\n    </button>\n  )\n}\n\nfunction DisplayingImages({imagesDisplay, oldImages, handleClick}) {\n  const imgWrap = css`\n    display: grid;\n    grid-auto-flow: column;\n    grid-gap: 10px;\n    overflow: auto hidden;\n    background: ${colors.kindaDarkBlue};\n    height: 199px;\n    padding-left: 22px;\n  `\n  const xyz = css`\n    background: ${colors.darkBlue};\n    overflow: hidden;\n    padding: 0 31px 43px;\n    width: 36vw;\n    ${mq.phoneLarge} {\n      width: 76vw;\n    }\n  `\n  const hStyle = css`\n    margin: 3px 0px 3px -15px;\n    background: ${colors.independenceBlue};\n    padding: 5px;\n  `\n  const div = css`\n    display: flex;\n    place-items: flex-start;\n    padding-right: 28px;\n    :hover {\n      background: ${colors.darkBlue};\n    }\n  `\n  return (\n    <div\n      css={css`\n        display: flex;\n        flex-direction: column;\n        margin-bottom: 50px;\n      `}\n    >\n      <div css={xyz}>\n        <h2 css={hStyle}>New Images</h2>\n        <div css={imgWrap}>\n          {imagesDisplay &&\n            imagesDisplay.map((file, i) => (\n              <div key={file} css={div}>\n                <PopUp\n                  title=\"Image\"\n                  fn={() => handleClick('imagesDisplay', i)}\n                />\n                {/* <button\n                  type=\"button\"\n                  onClick={() => handleClick('imagesDisplay', i)}\n                >\n                  X\n                </button> */}\n                <Image alt=\"\" crop=\"lpad\" width={100} src={file} />\n              </div>\n            ))}\n        </div>\n      </div>\n      {oldImages ? (\n        <div css={xyz}>\n          <h2 css={hStyle}>Old Images</h2>\n          <div css={imgWrap}>\n            {oldImages &&\n              oldImages.map((file, i) => (\n                <div key={file} css={div}>\n                  <PopUp title=\"Image\" fn={() => handleClick('oldImages', i)} />\n                  {/* <button\n                    type=\"button\"\n                    onClick={() => handleClick('oldImages', i)}\n                  >\n                    X\n                  </button> */}\n                  <Image alt=\"\" crop=\"lpad\" width={100} src={file} />\n                </div>\n              ))}\n          </div>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nfunction ProjInput({project, ...props}) {\n  const [state, setState] = React.useState(project)\n\n  if (project)\n    return (\n      <Input\n        value={state}\n        onChange={e => setState(e.target.value)}\n        {...props}\n      />\n    )\n  return <Input {...props} />\n}\n\nexport {\n  ProjInput,\n  uploadImage,\n  ImageDropZone,\n  useSafeDispatch,\n  reducer,\n  updateProject,\n  deleteProject,\n  createNewProject,\n  Button,\n  DisplayingImages,\n}\n","export const CLOUDINARY_UPLOAD_PRESET = 'obaxyyex'\nexport const CLOUDINARY_API_KEY = process.env.REACT_APP_CLOUDINARY_API_KEY\nexport const CLOUDINARY_UPLOAD_URL =\n  ' https://api.cloudinary.com/v1_1/ahmedeldessouki/image/upload'\n"],"sourceRoot":""}