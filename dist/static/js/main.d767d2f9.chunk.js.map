{
  "version": 3,
  "sources": [
    "assets/my.svg",
    "assets/react.svg",
    "components/Home/MyInfo/MyInfo.js",
    "Store/Actions/ProjectsActions.js",
    "components/PopUp/PopUp.js",
    "Store/Actions/ContactedMeActions.js",
    "Store/Actions/NotificationActions.js",
    "components/Home/Projects/ProjectsSummary.js",
    "components/Home/Projects/Projects.js",
    "components/Home/ContactMe/ContactMe.js",
    "components/Home/MyFooter/MyFooter.js",
    "components/Navigation/AuthNavlinks.js",
    "Store/Actions/AuthActions.js",
    "components/Navigation/UnAuthNavlinks.js",
    "components/Home/Home.js",
    "components/Dashboard/Notifications.js",
    "components/Dashboard/Messaging/MessagesSummary.js",
    "components/Dashboard/Messaging/Messages.js",
    "components/Dashboard/Dashboard.js",
    "components/Dashboard/Messaging/MessageDetails.js",
    "components/Auth/SignIn.js",
    "components/Auth/SignUp.js",
    "components/Home/Projects/ProjectDetails.js",
    "components/Home/Projects/CreateProject.js",
    "Config/CloudInary.js",
    "App.js",
    "serviceWorker.js",
    "Store/Reducer/AuthReducer.js",
    "Store/Reducer/ProjectReducer.js",
    "Store/Reducer/ContactedMeReducer.js",
    "Store/Reducer/uploadLogoReducer.js",
    "Store/Reducer/NotificationReducer.js",
    "Store/Reducer/RootReducer.js",
    "Config/FirebaseConfig.js",
    "index.js"
  ],
  "names": [
    "module",
    "exports",
    "MyInfo",
    "useState",
    "profile",
    "setProfile",
    "isLoading",
    "setIsLoading",
    "url",
    "setUrl",
    "setTime",
    "setSetTime",
    "myGitHub",
    "a",
    "axios",
    "res",
    "data",
    "useEffect",
    "setTimeout",
    "className",
    "sizeUnit",
    "size",
    "color",
    "loading",
    "style",
    "minHeight",
    "window",
    "innerHeight",
    "src",
    "avatar_url",
    "alt",
    "name",
    "location",
    "backgroundColor",
    "href",
    "html_url",
    "deleteProject",
    "project",
    "dispatch",
    "getState",
    "getFirebase",
    "firestore",
    "getFirestore",
    "console",
    "log",
    "collection",
    "doc",
    "id",
    "delete",
    "then",
    "toast",
    "success",
    "projectName",
    "type",
    "catch",
    "err",
    "error",
    "PopUp",
    "state",
    "show",
    "handleShow",
    "bind",
    "handleClose",
    "handleDelete",
    "this",
    "setState",
    "props",
    "contact",
    "deleteMessage",
    "notification",
    "deleteNotification",
    "HIDE",
    "display",
    "content",
    "title",
    "onClick",
    "Component",
    "connect",
    "contactName",
    "auth",
    "firebase",
    "uid",
    "to",
    "key",
    "projectLogo",
    "reactL",
    "Projects",
    "projectsData",
    "visibleHieght",
    "setVisibleHieght",
    "maxHeight",
    "map",
    "INIT_PROPS",
    "email",
    "phoneNumber",
    "description",
    "MyContactMe",
    "errors",
    "touched",
    "isSubmitting",
    "handleChange",
    "contError",
    "htmlFor",
    "value",
    "placeholder",
    "onChange",
    "required",
    "disabled",
    "ContactMe",
    "withFormik",
    "validationSchema",
    "Yup",
    "shape",
    "min",
    "max",
    "matches",
    "enableReinitialize",
    "mapPropsToValues",
    "mapValuesToPayload",
    "x",
    "handleSubmit",
    "values",
    "setErrors",
    "resetForm",
    "setSubmitting",
    "contactedMe",
    "document",
    "getElementById",
    "reset",
    "displayName",
    "ContactMeSchema",
    "add",
    "sentAt",
    "Date",
    "MyFooter",
    "react",
    "alignSelf",
    "signOut",
    "my",
    "width",
    "padding",
    "UnAuthNavlinks",
    "compose",
    "ordered",
    "projects",
    "firestoreConnect",
    "orderBy",
    "links",
    "setLinks",
    "StopPosition",
    "ShowAtPosition",
    "EasingType",
    "AnimationDuration",
    "ContainerClassName",
    "TransitionClassName",
    "Notifications",
    "notifications",
    "Array",
    "from",
    "split",
    "join",
    "user",
    "time",
    "toDate",
    "toDateString",
    "MessagesSummary",
    "Messages",
    "messagesData",
    "isLoaded",
    "limit",
    "ownProps",
    "match",
    "params",
    "message",
    "authError",
    "signIn",
    "creds",
    "credentials",
    "signInWithEmailAndPassword",
    "password",
    "useFormInput",
    "initialValue",
    "setValue",
    "e",
    "target",
    "onSubmit",
    "preventDefault",
    "signInValues",
    "firstName",
    "lastName",
    "confirmPassword",
    "FormikSignUp",
    "SignUp",
    "oneOf",
    "bag",
    "signUp",
    "SignupSchema",
    "newUser",
    "createUserWithEmailAndPassword",
    "resp",
    "set",
    "initials",
    "scrollTo",
    "link",
    "ky",
    "projectLink",
    "authorFirstName",
    "authorLastName",
    "createdAt",
    "MyCreateProject",
    "handleDrop",
    "acceptedFiles",
    "rejectedFiles",
    "length",
    "uploaders",
    "file",
    "formData",
    "myarrayx",
    "FormData",
    "append",
    "process",
    "now",
    "post",
    "headers",
    "response",
    "imageDropArray",
    "push",
    "sup",
    "secure_url",
    "setValues",
    "projectLogos",
    "all",
    "Size",
    "alert",
    "imSrc",
    "loader",
    "onDrop",
    "accept",
    "multiple",
    "maxSize",
    "getRootProps",
    "getInputProps",
    "CreateProject",
    "updateProject",
    "createProject",
    "history",
    "authorId",
    "update",
    "App",
    "path",
    "exact",
    "component",
    "Home",
    "Dashboard",
    "ProjectDetails",
    "MessageDetails",
    "SignIn",
    "autoClose",
    "Boolean",
    "hostname",
    "initState",
    "AuthReducer",
    "action",
    "ProjectReducer",
    "projError",
    "ContactedMeReducer",
    "downloadUrls",
    "uploadLogoReducer",
    "downloadUrl",
    "toString",
    "NotificationReducer",
    "notificationError",
    "RootReducer",
    "combineReducers",
    "firestoreReducer",
    "firebaseReducer",
    "initializeApp",
    "apiKey",
    "authDomain",
    "databaseURL",
    "projectId",
    "storageBucket",
    "storage",
    "messagingSenderId",
    "store",
    "createStore",
    "applyMiddleware",
    "thunk",
    "withExtraArgument",
    "reduxFirestore",
    "firebaseConfig",
    "reactReduxFirebase",
    "useFirestoreForProfile",
    "userProfile",
    "attachAuthIsReady",
    "firebaseAuthIsReady",
    "ReactDOM",
    "render",
    "navigator",
    "serviceWorker",
    "ready",
    "registration",
    "unregister"
  ],
  "mappings": "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",
  "file": "static/js/main.d767d2f9.chunk.js",
  "sourcesContent": [
    "module.exports = __webpack_public_path__ + \"static/media/my.958c41ec.svg\";",
    "module.exports = __webpack_public_path__ + \"static/media/react.26ef1cbc.svg\";",
    "import React, { useState, useEffect } from 'react'\r\nimport './MyInfo.scss'\r\nimport axios from 'axios'\r\nimport { GoMarkGithub } from 'react-icons/go'\r\nimport { BarLoader } from 'react-spinners'\r\n\r\nconst MyInfo = () => {\r\n  const [profile, setProfile] = useState('')\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [url, setUrl] = useState('')\r\n  const [setTime, setSetTime] = useState(0)\r\n\r\n  const myGitHub = async () => {\r\n    setUrl('https://api.github.com/users/ahmedeldessouki')\r\n    const res = await axios(url)\r\n    setProfile(res.data)\r\n    setIsLoading(false)\r\n    setSetTime(840000)\r\n    return [profile, isLoading, setTime]\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      myGitHub()\r\n    }, setTime)\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <div className=\"my-spinner-container\">\r\n          <BarLoader\r\n            className=\"my-spinner\"\r\n            sizeUnit={'px'}\r\n            size={150}\r\n            color={'#d4dff6'}\r\n            loading={isLoading}\r\n          />\r\n          Loading...\r\n        </div>\r\n      ) : (\r\n        <div className=\"MyInfo\" style={{ minHeight: window.innerHeight }}>\r\n          <div className=\"first-container\">\r\n            <div className=\"img-container\">\r\n              <img src={profile.avatar_url} alt=\"profilePicture\" />\r\n            </div>\r\n            <ul className=\"details-container\">\r\n              <li>{profile.name}</li>\r\n              <li className=\"follow-container\">Lives in {profile.location}</li>\r\n              <li\r\n                style={{\r\n                  backgroundColor: '#23527c',\r\n                }}\r\n              >\r\n                <a href={profile.html_url}>\r\n                  <GoMarkGithub /> My Github\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"second-container\">\r\n            <p>\r\n              Welcome! I'm Ahmed Eldessouki. I'm 31 years old from Cairo, Egypt\r\n              currently living in <b>Istanbul, Turkey</b>. I looking for a new\r\n              opportunity as a<em> Front-End Developer</em>. I graduated from\r\n              University Of Wales. I worked at RoomMe as an entry level\r\n              Front-End Developer. I'm a very passionate about Front-End\r\n              Developer. Always developing myself. A strength of mine, is my\r\n              ability to be observant of small details and to stay up-to-date\r\n              with the newest <em>technologies and techniques</em>.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyInfo\r\n",
    "import { toast } from \"react-toastify\";\n\nexport const createProject = (project) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) =>{\n    //make async call to the db\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('projects').add({\n      projectName: project.projectName,\n      projectLink: project.projectLink,\n      description: project.description,\n      projectLogo: [...project.projectLogos],\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(()=>{\n      toast.success(`Project \"${project.projectName}\" Created`);\n      dispatch({ type: 'CREATE_PROJECT', project });\n    }).catch((err)=>{\n      toast.error(\"Project Creation Failed\");\n      dispatch({type: 'CREATE_PROJECT_ERROR', err})\n    })\n  }\n};\nexport const updateProject = (project) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) =>{\n    //make async call to the db\n    const firestore = getFirestore();\n    console.log('project actions....:',project)\n    firestore.collection('projects').doc(`${project.match.params.id}`).update({\n      projectName: project.projectName ? project.projectName : project.project.projectName ,\n      projectLink: project.projectLink ? project.projectLink : project.project.projectLink,\n      projectLogo: project.projectLogos ? [...project.projectLogos]:[...project.project.projectLogo]  ,\n      description: project.description ? project.description : project.project.description,\n      // createdAt: new Date()\n    }).then(()=>{\n      toast.success(`Project \"${project.projectName}\" Updated`);\n      dispatch({ type: 'PROJECT_UPDATED', project });\n    }).catch((err)=>{\n      dispatch({type: 'PROJECT_NOT_UPDATED', err})\n      toast.error(\"Project Didn't Update\");\n    })\n  }\n};\n\nexport const deleteProject = (project) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) =>{\n    //make async call to the db\n    const firestore = getFirestore();\n    console.log('project actions....:',project)\n    firestore.collection('projects').doc(`${project.id}`).delete().then(()=>{\n      toast.success(`Project \"${project.projectName}\" deleted`);\n      dispatch({ type: 'PROJECT_DELETED'});\n    }).catch((err)=>{\n      toast.error(\"Project Deletion Failed\");\n      dispatch({type: 'PROJECT_DELETE_ERROR', err})\n    })\n  }\n};",
    "import './PopUp.scss'\nimport React, {Component} from 'react';\nimport {GoTrashcan} from \"react-icons/go\";\nimport {deleteProject} from \"../../Store/Actions/ProjectsActions\";\nimport {deleteMessage} from \"../../Store/Actions/ContactedMeActions\";\nimport { deleteNotification} from '../../Store/Actions/NotificationActions';\nimport {connect} from \"react-redux\";\n\nclass PopUp extends Component {\n  constructor() {\n    super();\n    this.state = {\n      show: false\n    };\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleDelete= this.handleDelete.bind(this);\n  }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n  handleDelete() {\n    if (this.props.project){\n      this.props.deleteProject(this.props.project)\n    } else if (this.props.contact){\n      this.props.deleteMessage(this.props.contact)\n    }else if (this.props.notification){\n      this.props.deleteNotification(this.props.notification)\n    }\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n\n  render () {\n    const HIDE = this.props.project || this.props.contact || this.props.notification ? {display:\"\"}: {display:'none'}\n    const content =this.props.title;\n\n    return (\n      <div className=\"PopUp\" style={{display: \"none\"}}>\n        <button className=\"toggle-button primary\" onClick={this.handleShow}>\n          <GoTrashcan />\n        </button>\n        <div className=\"static-modal\" >\n            <header>\n              <h1>Warning</h1>\n            </header>\n            <h2>Do you want to delete this {content}</h2>\n            <footer>\n              <button onClick={this.handleClose}>No</button>\n              <button className=\"danger\"  style={{HIDE}} onClick={this.handleDelete}>\n                Yes\n              </button>\n            </footer>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n  return {\n    deleteProject: (project) => dispatch(deleteProject(project)),\n    deleteMessage: (contact) => dispatch(deleteMessage(contact)),\n    deleteNotification: (notification) => dispatch(deleteNotification(notification)),\n  }\n};\nexport default connect(null,mapDispatchToProps)(PopUp)",
    "import { toast } from \"react-toastify\";\n\nexport const contactedMe = (contact) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) =>{\n    //make async call to the db\n    const firestore = getFirestore();\n    firestore.collection('contactedMe').add({\n      contactName: contact.contactName,\n      email: contact.email,\n      phoneNumber: contact.phoneNumber,\n      description: contact.description,\n      sentAt: new Date()\n    }).then(()=>{\n      toast.success(`Thanks \"${contact.contactName}\" For Contacting Me`);\n      dispatch({ type: 'MESSAGE_SENT', contact });\n    }).catch((err)=>{\n      toast.error(\"Sorry, I Didn't Get Your Message. Due to an Error\");\n      dispatch({type: 'MESSAGE_NOT_SENT', err})\n    })\n  }\n};\n\nexport const deleteMessage = (contact) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) =>{\n    //make async call to the db\n    const firestore = getFirestore();\n    console.log('message actions....:',contact)\n    firestore.collection('contactedMe').doc(`${contact.id}`).delete().then(()=>{\n      toast.success(`Message from \"${contact.contactName}\" is no longer exits`);\n      dispatch({ type: 'MESSAGE_DELETED'});\n    }).catch((err)=>{\n      toast.error(\"Error! Message Still Exists\");\n      dispatch({type: 'MESSAGE_DELETE_ERROR', err})\n    })\n  }\n};\n\n",
    "import {toast} from \"react-toastify\";\n\nexport const deleteNotification = (notification) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) =>{\n    //make async call to the db\n    const firestore = getFirestore();\n    console.log('notification actions....:',notification);\n    firestore.collection('notifications').doc(`${notification.id}`).delete().then(()=>{\n      toast.success(`Notification deleted`);\n      dispatch({ type: 'NOTIFICATION_DELETED'});\n    }).catch((err)=>{\n      toast.error(\"Notification Deletion Failed\");\n      dispatch({type: 'NOTIFICATION_DELETE_ERROR', err})\n    })\n  }\n};",
    "import React from 'react'\r\nimport './Styles/ProjectSummary.scss'\r\nimport { FaPen } from 'react-icons/fa'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { deleteProject } from '../../../Store/Actions/ProjectsActions'\r\nimport PopUp from '../../PopUp/PopUp'\r\nimport reactL from '../../../assets/react.svg'\r\n\r\nconst ProjectsSummary = ({ project, auth, ...props }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"ProjectSummary\">\r\n        {auth.uid ? (\r\n          <div className=\"icons-svg\">\r\n            <NavLink to={`/edit/${project.id}`} key={project}>\r\n              <FaPen />\r\n            </NavLink>\r\n            <PopUp project={project} title={'Project'} />\r\n          </div>\r\n        ) : null}\r\n        {project.projectLogo[0] ? (\r\n          <img\r\n            alt=\"Project's logo\"\r\n            src={\r\n              `https://images.weserv.nl/?url=${project.projectLogo[0]}` ||\r\n              reactL\r\n            }\r\n          />\r\n        ) : null}\r\n        <NavLink to={props.to} key={props.key}>\r\n          <h1 style={{ color: 'cornflowerblue' }}>{project.projectName}</h1>\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteProject: (project) => dispatch(deleteProject(project)),\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsSummary)\r\n",
    "import React, { useState, useEffect } from 'react'\r\nimport './Styles/Projects.scss'\r\nimport ProjectsSummary from './ProjectsSummary'\r\n\r\nconst Projects = ({ projectsData }) => {\r\n  const [visibleHieght, setVisibleHieght] = useState(window.innerHeight)\r\n\r\n  useEffect(() => {\r\n    setVisibleHieght(window.innerHeight)\r\n  }, [setVisibleHieght])\r\n\r\n  return (\r\n    <div className=\"Projects\" style={{ maxHeight: visibleHieght }}>\r\n      <h1>My Projects</h1>\r\n      <div className=\"cards-wrapper\" style={{ maxHeight: visibleHieght }}>\r\n        {projectsData &&\r\n          projectsData.map((project) => {\r\n            return (\r\n              <ProjectsSummary\r\n                project={project}\r\n                to={`/projects/${project.id}`}\r\n                key={project.id}\r\n              />\r\n            )\r\n          })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n",
    "import './ContactMe.scss'\r\nimport React, { Component } from 'react'\r\nimport { withFormik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { FaAddressCard, FaPhoneSquare } from 'react-icons/fa'\r\nimport { GoMention } from 'react-icons/go'\r\nimport { contactedMe } from '../../../Store/Actions/ContactedMeActions'\r\nimport { BarLoader } from 'react-spinners'\r\nimport { connect } from 'react-redux'\r\n\r\nconst INIT_PROPS = {\r\n  contactName: '',\r\n  email: '',\r\n  phoneNumber: '',\r\n  description: '',\r\n}\r\n\r\nclass MyContactMe extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      ...INIT_PROPS,\r\n    }\r\n  }\r\n  render() {\r\n    const {\r\n      errors,\r\n      touched,\r\n      isSubmitting,\r\n      handleChange,\r\n      contError,\r\n      contactName,\r\n      email,\r\n      phoneNumber,\r\n      description,\r\n    } = this.props\r\n    return (\r\n      <div className=\"ContactMe\">\r\n        <h1>Contact Me</h1>\r\n        <Form id={'ContactMe'}>\r\n          <div className=\"first-container\">\r\n            <label className=\"field-container\" htmlFor=\"contactName\">\r\n              <div className=\"input-svg\">\r\n                <FaAddressCard />\r\n                <Field\r\n                  name=\"contactName\"\r\n                  id=\"contactName\"\r\n                  value={contactName}\r\n                  placeholder=\"Enter your name\"\r\n                />\r\n              </div>\r\n              {errors.contactName && touched.contactName ? (\r\n                <p className=\"error-message\">{errors.contactName}</p>\r\n              ) : null}\r\n            </label>\r\n            <div className=\"field-container\">\r\n              <label className=\"input-svg\" htmlFor=\"email\">\r\n                <GoMention />\r\n                <Field\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  type=\"email\"\r\n                  placeholder=\"Email Address\"\r\n                />\r\n              </label>\r\n              {errors.email && touched.email ? (\r\n                <div className=\"error-message\">{errors.email}</div>\r\n              ) : null}\r\n            </div>\r\n            <label className=\"field-container\" htmlFor=\"phoneNumber\">\r\n              <div className=\"input-svg\">\r\n                <FaPhoneSquare />\r\n                <Field\r\n                  name=\"phoneNumber\"\r\n                  id=\"phoneNumber\"\r\n                  type=\"tel\"\r\n                  value={phoneNumber}\r\n                  placeholder=\"Enter Your Phone Number\"\r\n                />\r\n              </div>\r\n              {errors.phoneNumber && touched.phoneNumber ? (\r\n                <label className=\"error-message\">{errors.phoneNumber}</label>\r\n              ) : null}\r\n            </label>\r\n          </div>\r\n          <label className=\"second-container\" htmlFor=\"description\">\r\n            <textarea\r\n              name=\"description\"\r\n              id=\"description\"\r\n              onChange={handleChange}\r\n              value={description}\r\n              className=\"textArea\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\" disabled={isSubmitting}>\r\n            Submit\r\n          </button>\r\n          {contError ? <div className=\"error-message\">{contError}</div> : null}\r\n        </Form>\r\n        {isSubmitting ? (\r\n          <div className=\"my-spinner-container\">\r\n            <span>Thank you for contacting me</span>\r\n            <BarLoader\r\n              className=\"my-spinner\"\r\n              sizeUnit={'px'}\r\n              size={150}\r\n              color={'#d4dff6'}\r\n              loading={isSubmitting}\r\n            />\r\n            <span>I will get back to you soon</span>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n\r\nconst ContactMeSchema = withFormik({\r\n  validationSchema: Yup.object().shape({\r\n    contactName: Yup.string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n    email: Yup.string().email('Invalid email').required('Required'),\r\n    phoneNumber: Yup.string()\r\n      .min(11, 'Too Short!')\r\n      .max(13, 'Too Long!')\r\n      .matches(phoneRegExp, 'Phone number is not valid'),\r\n    description: Yup.string(),\r\n  }),\r\n  enableReinitialize: true,\r\n  mapPropsToValues: (props) => ({\r\n    ...props,\r\n  }),\r\n  mapValuesToPayload: (x) => x,\r\n  handleSubmit: (values, { setErrors, resetForm, setSubmitting }) => {\r\n    setTimeout(() => {\r\n      if (values.name === 'admin') {\r\n        setErrors({ contactName: 'Nice try!' })\r\n      } else {\r\n        values.contactedMe(values)\r\n        resetForm({})\r\n        document.getElementById('ContactMe').reset()\r\n      }\r\n      setSubmitting(false)\r\n    }, 2000)\r\n  },\r\n  displayName: 'ContactMe',\r\n})\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contError: state.contactedMe.contError,\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    contactedMe: (contact) => dispatch(contactedMe(contact)),\r\n  }\r\n}\r\nconst ContactMe = ContactMeSchema(MyContactMe)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactMe)\r\n",
    "import React from 'react'\r\nimport './MyFooter.scss'\r\nimport {\r\n  FaLinkedin,\r\n  FaSass,\r\n  FaFacebookSquare,\r\n  FaInstagram,\r\n  FaTwitterSquare,\r\n  FaGooglePlusSquare,\r\n  FaRegCopyright,\r\n  FaGithubSquare,\r\n} from 'react-icons/fa'\r\nimport react from '../../../assets/react.svg'\r\n\r\nconst MyFooter = () => {\r\n  return (\r\n    <div className=\"MyFooter\">\r\n      <div className=\"separator\" />\r\n      <div className=\"left-container\">\r\n        <a href=\"https://www.linkedin.com/in/ahmedeldessouki/\">\r\n          <FaLinkedin />\r\n        </a>\r\n        <a href=\"https://www.github.com/ahmedeldessouki/\">\r\n          <FaGithubSquare />\r\n        </a>\r\n        <a href=\"https://plus.google.com/+AhmedElDessouki1\">\r\n          <FaGooglePlusSquare />\r\n        </a>\r\n        <a href=\"https://www.instagram.com/eldessouki.a\">\r\n          <FaInstagram />\r\n        </a>\r\n        <a href=\"https://www.facebook.com/ahmed.eldessouki.39\">\r\n          <FaFacebookSquare />\r\n        </a>\r\n        <a href=\"https://www.twitter.com/nem0adam\">\r\n          <FaTwitterSquare />\r\n        </a>\r\n      </div>\r\n      <div className=\"center-container\">\r\n        <img className=\"react-logo\" alt=\"\" src={react} />\r\n        <FaSass style={{ color: 'hotpink', alignSelf: 'center' }} />\r\n      </div>\r\n      <div className=\"right-container\">\r\n        <FaRegCopyright />\r\n        <p>2019 Ahmed ElDessouki</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default MyFooter\r\n",
    "import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../Store/Actions/AuthActions'\r\nimport './Navigation.scss'\r\nimport my from '../../assets/my.svg'\r\n\r\nconst AuthNavlinks = (props) => {\r\n  return (\r\n    <div className=\"Navigation\" >\r\n        <div>\r\n          <img\r\n            src={my}\r\n            alt={'Ahmed ElDessouki'}\r\n            style={{ width: '150px', padding: '0' }}\r\n          />\r\n        </div>\r\n      <div>\r\n          <a href={'/'}>\r\n            Home\r\n          </a>\r\n          <a href={'/#projects'}>\r\n            Projects\r\n          </a>\r\n          <a href={'/#contactMe'}>\r\n            Contact Me\r\n          </a>\r\n          <a href={'/dashboard'}>\r\n            DashBoard\r\n          </a>\r\n          <a href={'/create-project'}>\r\n            Create Project\r\n          </a>\r\n          <a href={'/signup'}>\r\n            SignUp\r\n          </a>\r\n          <a onClick={props.signOut} href={'/'}>\r\n            SignOut\r\n          </a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut()),\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AuthNavlinks)\r\n",
    "import { toast } from \"react-toastify\";\n\nexport const signIn = (credentials) => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      toast.success(`Welcome \"${credentials.email}\"`);\n      dispatch({\n        type: 'LOGIN_SUCCESS'\n      })\n    }).catch((err) => {\n      toast.error(\"Login Failed, Incorrect Credentials!!\");\n      dispatch({\n        type: 'LOGIN_ERROR',\n        err\n      })\n    })\n  }\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      toast.success(`See You Soon`);\n      dispatch({\n        type: 'SIGNOUT_SUCCESS'\n      });\n    }).catch((err)=>{\n      toast.error(\"Shit, You Can't Logout\");\n      dispatch({\n        type: 'SIGNOUT_FAILED', err\n      });\n    })\n  }\n};\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then((resp)=>{\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n\n      })\n    }).then(() => {\n      toast.success(`Welcome \"${newUser.email}\" to The Club`);\n      dispatch({ type: 'SIGNUP_SUCCESS'})\n    }).catch((err)=>{\n      toast.error(\"SignUp Failed\");\n      dispatch ({ type: 'SIGNUP_ERROR', err})\n    })\n  }\n}",
    "import React from 'react'\r\nimport './Navigation.scss'\r\nimport my from '../../assets/my.svg'\r\n\r\nconst UnAuthNavlinks = () => {\r\n  return (\r\n    <div className=\"myNav-container\">\r\n      <div className=\"my-name\">\r\n        <img\r\n          src={my}\r\n          alt={'Ahmed Eldessouki'}\r\n          style={{ width: '267px', padding: '0px 0px 15px 20px' }}\r\n        />\r\n      </div>\r\n      <div className=\"myNav\">\r\n        <a className=\"myNav-item\" href=\"/\">\r\n          Home\r\n        </a>\r\n        <a className=\"myNav-item\" href={'/#projects'}>\r\n          Projects\r\n        </a>\r\n        <a className=\"myNav-item\" href=\"/#contactMe\">\r\n          Contact Me\r\n        </a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UnAuthNavlinks\r\n",
    "import React, { useEffect, useState } from 'react'\r\nimport './Home.scss'\r\nimport MyInfo from './MyInfo/MyInfo'\r\nimport Projects from './Projects/Projects'\r\nimport ContactMe from './ContactMe/ContactMe'\r\nimport MyFooter from './MyFooter/MyFooter'\r\nimport ScrollUpButton from 'react-scroll-up-button'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport AuthNavlinks from '../Navigation/AuthNavlinks'\r\nimport UnAuthNavlinks from '../Navigation/UnAuthNavlinks'\r\n\r\nconst Home = ({ projectsData, auth, profile }) => {\r\n  const [links, setLinks] = useState(() => { })\r\n\r\n  useEffect(() => {\r\n    setLinks(auth.uid ? <AuthNavlinks profile={profile} /> : <UnAuthNavlinks />)\r\n  }, [auth.uid, profile])\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <header className=\"Home-header\" id=\"1\">\r\n        {links}\r\n        <MyInfo />\r\n      </header>\r\n      <ScrollUpButton\r\n        StopPosition={0}\r\n        ShowAtPosition={150}\r\n        EasingType=\"easeOutCubic\"\r\n        AnimationDuration={500}\r\n        ContainerClassName=\"ScrollUpButton__Container\"\r\n        TransitionClassName=\"ScrollUpButton__Toggled\"\r\n      />\r\n      <main id=\"projects\">\r\n        <Projects projectsData={projectsData} />\r\n      </main>\r\n      <footer id=\"contactMe\">\r\n        <ContactMe />\r\n        <MyFooter />\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projectsData: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  }\r\n}\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: 'projects', orderBy: ['createdAt', 'desc'] }])\r\n)(Home)\r\n",
    "import React from 'react'\r\nimport './Styles/Notifications.scss'\r\nimport PopUp from '../PopUp/PopUp'\r\n\r\nconst Notifications = ({ notifications }) => {\r\n  return (\r\n    <div className=\"Notifications\">\r\n      <h1>Notification</h1>\r\n      <div className=\"notification-card\">\r\n        <div>\r\n          <ul className=\"items\">\r\n            {notifications &&\r\n              notifications.map((notification) => {\r\n                return (\r\n                  <li key={notification.id}>\r\n                    <div\r\n                      className={Array.from(\r\n                        notification.content.split(' ', 3)\r\n                      ).join('-')}\r\n                    >\r\n                      <PopUp\r\n                        notification={notification}\r\n                        title={'Notification'}\r\n                      />\r\n                      <h4>{notification.user}</h4>\r\n                      <h6>{notification.content}</h6>\r\n                      <span>{notification.time.toDate().toDateString()}</span>\r\n                    </div>\r\n                  </li>\r\n                )\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications\r\n",
    "import React from 'react'\r\nimport './Styles/MessagesSummary.scss'\r\nimport { Scrollbars } from 'react-custom-scrollbars'\r\nimport PopUp from '../../PopUp/PopUp'\r\nimport { NavLink } from 'react-router-dom'\r\nconst MessagesSummary = (props) => {\r\n  const { contact } = props\r\n  return (\r\n    <div className=\"MessagesSummary\">\r\n      <PopUp contact={contact} title={'Message'} />\r\n      <NavLink to={props.to} key={props.id}>\r\n        <h3>{contact.contactName}</h3>\r\n        <Scrollbars className=\"my-scroller\">\r\n          <p className=\"description\">{contact.description}</p>\r\n        </Scrollbars>\r\n        <span>{contact.sentAt.toDate().toDateString()}</span>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MessagesSummary\r\n",
    "import React from 'react'\r\nimport './Styles/Messages.scss'\r\nimport MessagesSummary from './MessagesSummary'\r\n\r\nconst Messages = ({ messagesData }) => {\r\n  return (\r\n    <div className=\"Messages\">\r\n      <h1>My Messages</h1>\r\n      <div className=\"cards-wrapper\">\r\n        {messagesData &&\r\n          messagesData.map((contact) => {\r\n            return (\r\n              <MessagesSummary\r\n                contact={contact}\r\n                to={`/Messages/${contact.id}`}\r\n                key={contact.id}\r\n              />\r\n            )\r\n          })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Messages\r\n",
    "import React from 'react'\r\nimport Notifications from './Notifications'\r\nimport Projects from '../Home/Projects/Projects'\r\nimport AuthNavlinks from '../Navigation/AuthNavlinks'\r\nimport './Styles/Dashboard.scss'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Messages from './Messaging/Messages'\r\nimport { BarLoader } from 'react-spinners'\r\n\r\nconst Dashboard = ({\r\n  isLoaded,\r\n  isSubmitting,\r\n  auth,\r\n  projectsData,\r\n  notifications,\r\n  messagesData,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {!auth.uid ? (\r\n        <Redirect to=\"/signin\" />\r\n      ) : (\r\n        <div>\r\n          {!isSubmitting ? (\r\n            <div className=\"my-spinner-container\">\r\n              <BarLoader\r\n                className=\"my-spinner\"\r\n                sizeUnit={'px'}\r\n                size={150}\r\n                color={'#d4dff6'}\r\n                loading={!isSubmitting}\r\n              />\r\n              Loading...\r\n            </div>\r\n          ) : (\r\n            <div className=\"Dashboard\">\r\n              <AuthNavlinks />\r\n              <main>\r\n                <div className=\"Dashboard-items\">\r\n                  <div className=\"first-container\">\r\n                    <Projects projectsData={projectsData} />\r\n                  </div>\r\n                  <div className=\"second-container\">\r\n                    <Notifications notifications={notifications} />\r\n                  </div>\r\n                </div>\r\n              </main>\r\n              <div>\r\n                <Messages messagesData={messagesData} />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projectsData: state.firestore.ordered.projects,\r\n    isSubmitting: state.firebase.profile.isLoaded,\r\n    messagesData: state.firestore.ordered.contactedMe,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications,\r\n  }\r\n}\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n    { collection: 'contactedMe', orderBy: ['sentAt', 'desc'] },\r\n    { collection: 'notifications', limit: 10, orderBy: ['time', 'desc'] },\r\n  ])\r\n)(Dashboard)\r\n",
    "import React from 'react'\nimport {connect} from 'react-redux'\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {compose} from 'redux'\nimport './Styles/MessageDetails.scss'\n// import ContactMe from '../ContactMe/ContactMe'\nimport AuthNavlinks from '../../Navigation/AuthNavlinks'\nimport {BarLoader} from \"react-spinners\";\nimport {Redirect} from \"react-router-dom\";\n\nconst MessageDetails = (props) => {\n  const { message } = props;\n  // console.log(message);\n  if (message) {\n    return(\n      <div className=\"MessageDetails\">\n        <AuthNavlinks/>\n\n        <div className=\"details\">\n          <div className=\"first-container\">\n            <div className=\"double-container\">\n              <h2><a href={`mailto:${message.email}`}>{message.email}</a></h2>\n              <h2>{message.phoneNumber}</h2>\n            </div>\n            <p>{message.description}</p>\n          </div>\n          <div className=\"double-container\">\n            <div>Author: {message.contactName}</div>\n            <div>Created At: {message.sentAt.toDate().toDateString()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        {props.auth.uid ?\n          <div className=\"my-spinner-container\">\n            <BarLoader\n              className=\"my-spinner\"\n              sizeUnit={\"px\"}\n              size={150}\n              color={'#d4dff6'}\n              loading={true}\n            />\n            Loading...\n          </div>\n          :\n          <Redirect to='/signin'/>\n        }\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = (state, ownProps) =>{\n  const id = ownProps.match.params.id;\n  const contactedMe = state.firestore.data.contactedMe;\n  const message = contactedMe ? contactedMe[id]: null;\n\n  return {\n    message,\n    auth:state.firebase.auth\n  }\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    {collection: 'contactedMe'}\n  ])\n)(MessageDetails)\n",
    "import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../Store/Actions/AuthActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthNavlinks from \"../Navigation/AuthNavlinks\";\r\nimport UnAuthNavlinks from \"../Navigation/UnAuthNavlinks\";\r\nimport \"./Styles/SignUp.scss\";\r\n\r\nconst SignIn = ({ signIn, auth, authError }) => {\r\n  const email = useFormInput(\"Enter Your Email\");\r\n  const password = useFormInput(\"Enter Your Password\");\r\n\r\n  function useFormInput(initialValue) {\r\n    const [value, setValue] = useState(initialValue);\r\n    const handleChange = (e) => {\r\n      setValue(e.target.value);\r\n    };\r\n    return { value, onChange: handleChange };\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const signInValues = {\r\n      email: email.value,\r\n      password: password.value,\r\n    };\r\n    signIn(signInValues);\r\n  };\r\n  const links = auth.uid ? <AuthNavlinks /> : <UnAuthNavlinks />;\r\n  return (\r\n    <div>\r\n      {auth.uid ? (\r\n        <Redirect to=\"/\" />\r\n      ) : (\r\n        <div className=\"SignIn\">\r\n          {links}\r\n          <h1>Sign-in</h1>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"field-container\">\r\n              <input {...email} />\r\n              <input {...password} type=\"password\" />\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\">SignIn</button>\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n",
    "import React, { Component } from 'react';\nimport { withFormik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport './Styles/SignUp.scss'\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {signUp} from \"../../Store/Actions/AuthActions\";\nimport {BarLoader} from \"react-spinners\";\nimport AuthNavlinks from \"../Navigation/AuthNavlinks\";\n\nconst INIT_PROPS ={\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n}\nclass FormikSignUp extends Component {\n  state = {\n    ...INIT_PROPS\n  }\n  render() {\n    const { errors, touched, isSubmitting, authError, auth, handleSubmit,\n      firstName, lastName, email, password,confirmPassword} = this.props;\n\n    return (\n      <div>\n        {!auth.uid ? <Redirect to='/signin'/> :\n          <div className=\"SignUp\">\n            <AuthNavlinks title={\"Registration\"}/>\n            <h1>Sign up</h1>\n            <Form id=\"#sign-up\" onSubmit={handleSubmit}>\n              <div className=\"double-container\">\n                <div className=\"field-container\">\n                  <Field name=\"firstName\" value={firstName} placeholder=\"First Name\" />\n                  {errors.firstName && touched.firstName ? (\n                    <p className=\"error-message\">{errors.firstName}</p>\n                  ) : null}\n                </div>\n                <div className=\"field-container\">\n                  <Field name=\"lastName\" value={lastName} placeholder=\"Last Name\" />\n                  {errors.lastName && touched.lastName ? (\n                    <div className=\"error-message\">{errors.lastName}</div>\n                  ) : null}\n                </div>\n              </div>\n              <div className=\"field-container\">\n                <Field name=\"email\" type=\"email\" value={email} placeholder=\"Email Address\" />\n                {errors.email && touched.email ? <div className=\"error-message\">{errors.email}</div> : null}\n              </div>\n              <div className=\"double-container\">\n                <div className=\"field-container\">\n                  <Field name=\"password\" type=\"password\" value={password} placeholder=\"Enter Password\" />\n                  {errors.password && touched.password ? <div className=\"error-message\">{errors.password}</div> : null}\n                </div>\n                <div className=\"field-container\">\n                  <Field name=\"confirmPassword\" type=\"password\" value={confirmPassword} placeholder=\"Re-Enter Password\" />\n                  {errors.confirmPassword && touched.confirmPassword ? <div className=\"error-message\">{errors.confirmPassword}</div> : null}\n                </div>\n                {authError ? <div className=\"error-message\">{authError}</div>  : null}\n              </div>\n              <button type=\"submit\" disabled={isSubmitting} >Submit</button>\n            </Form>\n            {isSubmitting ?  <div className=\"my-spinner-container\">\n              <BarLoader\n                className=\"my-spinner\"\n                sizeUnit={\"px\"}\n                size={150}\n                color={'#d4dff6'}\n                loading={isSubmitting}\n              />Loading...</div> : null}\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nconst SignupSchema = withFormik({\n  validationSchema: Yup.object().shape({\n    firstName: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n    lastName: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n    email: Yup.string()\n    .email('Invalid email')\n    .required('Required'),\n    password: Yup.string()\n    .min(6, 'Too Short!')\n    .required('Required'),\n    confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], \"Passwords don't match\")\n    .required('Confirm Password is required')\n  }),\n  mapPropsToValues: props => ({\n    ...props\n  }),\n  mapValuesToPayload: x => x,\n  handleSubmit: (values, bag) => {\n    setTimeout(() => {\n      if (values.firstName === 'admin') {\n        bag.setErrors({ firstName: 'Nice try!' });\n      } else if (values.lastName === 'admin') {\n        bag.setErrors({ lastName: 'Nice try!' });\n      } else {\n        values.signUp(values)\n        document.getElementById(\"sign-up\").reset();\n        bag.resetForm()\n      }\n      bag.setSubmitting(false);\n    }, 2000)\n  },\n  displayName: 'SignUp',\n});\n\nconst mapStateToProps = (state) =>{\n  return{\n    auth:state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\nconst mapDispatchToProps= (dispatch) => {\n  return{\n    signUp: (values) => dispatch(signUp(values))\n  }\n}\nconst SignUp = SignupSchema(FormikSignUp);\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)",
    "import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport './Styles/ProjectDetails.scss'\r\nimport ContactMe from '../ContactMe/ContactMe'\r\nimport AuthNavlinks from '../../Navigation/AuthNavlinks'\r\nimport UnAuthNavlinks from '../../Navigation/UnAuthNavlinks'\r\nimport { BarLoader } from 'react-spinners'\r\nimport MyFooter from '../MyFooter/MyFooter'\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\r\nimport { Carousel } from 'react-responsive-carousel'\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth, profile } = props\r\n  const links = auth.uid ? (\r\n    <AuthNavlinks auth={auth} title={'Project Details'} profile={profile} />\r\n  ) : (\r\n    <UnAuthNavlinks />\r\n  )\r\n  window.scrollTo(0, 0)\r\n  if (project) {\r\n    return (\r\n      <div className=\"bg-img\">\r\n        <div className=\"ProjectDetails\">\r\n          {links}\r\n          <div className=\"details-container\">\r\n            <div className=\"logos-container\">\r\n              {project.projectLogo !== null ? (\r\n                <Carousel>\r\n                  {project.projectLogo.map((link, ky) => {\r\n                    return (\r\n                      <div key={ky}>\r\n                        <img\r\n                          className=\"img-display\"\r\n                          alt={\"project's pictures\"}\r\n                          src={`https://images.weserv.nl/?url=${link}`}\r\n                        />\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </Carousel>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"details\">\r\n              <div className=\"first-container\">\r\n                <h2>\r\n                  <a href={project.projectLink}>{project.projectName}</a>\r\n                </h2>\r\n                <p>{project.description}</p>\r\n              </div>\r\n              <div className=\"double-container\">\r\n                <div>\r\n                  Author: {project.authorFirstName} {project.authorLastName}\r\n                </div>\r\n                <div>\r\n                  Created At: {project.createdAt.toDate().toDateString()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <footer>\r\n            <ContactMe />\r\n            <MyFooter />\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"my-spinner-container\">\r\n        <BarLoader\r\n          className=\"my-spinner\"\r\n          sizeUnit={'px'}\r\n          size={150}\r\n          color={'#d4dff6'}\r\n          loading={true}\r\n        />\r\n        Loading...\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id\r\n  const projects = state.firestore.data.projects\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project,\r\n    profile: state.firebase.profile,\r\n    auth: state.firebase.auth,\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: 'projects' }])\r\n)(ProjectDetails)\r\n",
    "/* eslint-disable array-callback-return */\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  createProject,\r\n  updateProject,\r\n} from '../../../Store/Actions/ProjectsActions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport './Styles/CreateProject.scss'\r\nimport AuthNavlinks from '../../Navigation/AuthNavlinks'\r\nimport { BarLoader } from 'react-spinners'\r\nimport Dropzone from 'react-dropzone'\r\nimport axios from 'axios'\r\nimport { withFormik, Form, Field } from 'formik'\r\nimport {\r\n  CLOUDINARY_API_KEY,\r\n  CLOUDINARY_UPLOAD_PRESET,\r\n  CLOUDINARY_UPLOAD_URL,\r\n} from '../../../Config/CloudInary'\r\nimport * as Yup from 'yup'\r\nimport MyFooter from '../MyFooter/MyFooter'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst INIT_PROPS = {\r\n  projectName: '',\r\n  projectLink: '',\r\n  description: '',\r\n}\r\n\r\nclass MyCreateProject extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      imSrc: null,\r\n      imageDropArray: [],\r\n      projectLogos: [],\r\n      isLoading: false,\r\n      ...INIT_PROPS,\r\n    }\r\n    this.handleDrop = this.handleDrop.bind(this)\r\n  }\r\n  handleDrop = (acceptedFiles, rejectedFiles) => {\r\n    this.setState({\r\n      isLoading: true,\r\n    })\r\n    if (acceptedFiles && acceptedFiles.length > 0) {\r\n      if (acceptedFiles[0].size < 8000000) {\r\n        const uploaders = acceptedFiles.map((file) => {\r\n          let myarrayx = []\r\n          let formData\r\n          // Initial FormData\r\n          formData = new FormData()\r\n          formData.append('file', file)\r\n          formData.append('tags', `codeinfuse, small, gist`)\r\n          formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET)\r\n          formData.append('api_key', CLOUDINARY_API_KEY) // Replace API key with your own Cloudinary key\r\n          formData.append('timestamp', Date.now() / 1000 || 0) // Replace API key with your own Cloudinary key\r\n          return axios\r\n            .post(CLOUDINARY_UPLOAD_URL, formData, {\r\n              headers: { 'X-Requested-With': 'XMLHttpRequest' },\r\n            })\r\n            .then((response) => {\r\n              toast.success(`Images Upload Was Successful`)\r\n              const data = response.data\r\n              this.state.imageDropArray.push(data)\r\n              this.state.imageDropArray.map((sup) => {\r\n                myarrayx.push(sup.secure_url)\r\n                this.props.setValues({\r\n                  ...this.props.values,\r\n                  projectLogos: myarrayx,\r\n                })\r\n              })\r\n            })\r\n            .catch((err) => {\r\n              toast.error(\"Sorry, Images Didn't Upload!\")\r\n              console.error(err)\r\n            })\r\n        })\r\n        axios\r\n          .all(uploaders)\r\n          .then(() => {\r\n            this.setState({\r\n              isLoading: false,\r\n            })\r\n            this.props.setValues({\r\n              ...this.props.values,\r\n            })\r\n          })\r\n          .catch((err) => {\r\n            console.error(err)\r\n          })\r\n      }\r\n    }\r\n    if (rejectedFiles && rejectedFiles.length > 0) {\r\n      if (rejectedFiles[0].Size > 8000000) {\r\n        alert('This File is too big')\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { imageDropArray, isLoading } = this.state\r\n    const {\r\n      errors,\r\n      touched,\r\n      isSubmitting,\r\n      auth,\r\n      project,\r\n      handleChange,\r\n      description,\r\n      projectLink,\r\n      projectName,\r\n    } = this.props\r\n    let loader = isLoading || isSubmitting\r\n    return (\r\n      <div>\r\n        {!auth.uid ? (\r\n          <Redirect to=\"/signin\" />\r\n        ) : (\r\n          <div className=\"CreateProject\">\r\n            <AuthNavlinks title={'Create Project'} />\r\n            <h1>Create New Project</h1>\r\n            <div className=\"wrapper-container\">\r\n              {imageDropArray.length !== 0 ? (\r\n                <div className=\"maping\">\r\n                  {imageDropArray.map((link, ky) => {\r\n                    return <img alt=\"\" key={ky} src={link.url} />\r\n                  })}\r\n                </div>\r\n              ) : null}\r\n              <Form id=\"createProject\">\r\n                <Dropzone\r\n                  onDrop={this.handleDrop}\r\n                  accept=\"image/*\"\r\n                  multiple\r\n                  maxSize={8000000}\r\n                >\r\n                  {({ getRootProps, getInputProps }) => (\r\n                    <div {...getRootProps()} className=\"drop-zone-styles\">\r\n                      <span>drop image(s)</span>\r\n                      <input type=\"file\" {...getInputProps()} />\r\n                    </div>\r\n                  )}\r\n                </Dropzone>\r\n                <div className=\"field-container\">\r\n                  <Field\r\n                    type=\"text\"\r\n                    value={projectName}\r\n                    placeholder={project ? project.projectName : 'Project Name'}\r\n                    name=\"projectName\"\r\n                  />\r\n                </div>\r\n                {errors.projectName && touched.projectName ? (\r\n                  <p className=\"error-message\">{errors.projectName}</p>\r\n                ) : null}\r\n                <div className=\"field-container\">\r\n                  <Field\r\n                    type=\"url\"\r\n                    value={projectLink}\r\n                    placeholder={project ? project.projectLink : 'Project Link'}\r\n                    name=\"projectLink\"\r\n                  />\r\n                </div>\r\n                <textarea\r\n                  placeholder={\r\n                    project ? project.description : 'Project Description'\r\n                  }\r\n                  name=\"description\"\r\n                  value={description}\r\n                  onChange={handleChange}\r\n                  // required\r\n                />\r\n                <button type=\"submit\" disabled={isSubmitting}>\r\n                  {project ? 'Edit' : 'Create'} Project\r\n                </button>\r\n              </Form>\r\n            </div>\r\n            {loader ? (\r\n              <div className=\"my-spinner-container\">\r\n                <BarLoader\r\n                  className=\"my-spinner\"\r\n                  sizeUnit={'px'}\r\n                  size={150}\r\n                  color={'#d4dff6'}\r\n                  loading={loader}\r\n                />\r\n                Loading...\r\n              </div>\r\n            ) : null}\r\n            <MyFooter />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst ContactMeSchema = withFormik({\r\n  validationSchema: Yup.object().shape({\r\n    projectName: Yup.string(),\r\n    // .required('Required'),\r\n    description: Yup.string(),\r\n  }),\r\n  enableReinitialize: true,\r\n  mapPropsToValues: (props) => ({\r\n    ...props,\r\n  }),\r\n  mapValuesToPayload: (x) => x,\r\n  handleSubmit: (values, bag) => {\r\n    setTimeout(() => {\r\n      values.project\r\n        ? values.updateProject(values)\r\n        : values.createProject(values)\r\n\r\n      bag.setSubmitting(false)\r\n      values.history.push('/dashboard')\r\n    }, 2000)\r\n  },\r\n  displayName: 'createProject',\r\n})\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id\r\n  const projects = state.firestore.data.projects\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    auth: state.firebase.auth,\r\n    project,\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    updateProject: (project) => dispatch(updateProject(project)),\r\n  }\r\n}\r\nconst CreateProject = ContactMeSchema(MyCreateProject)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n",
    "export const CLOUDINARY_UPLOAD_PRESET = 'obaxyyex'\r\nexport const CLOUDINARY_API_KEY = process.env.REACT_APP_CLOUDINARY_API_KEY\r\nexport const CLOUDINARY_UPLOAD_URL =\r\n  ' https://api.cloudinary.com/v1_1/ahmedeldessouki/image/upload'\r\n",
    "import React, { useEffect } from 'react'\r\nimport './App.scss'\r\nimport Home from './components/Home/Home'\r\nimport { Route, Switch, Redirect, BrowserRouter } from 'react-router-dom'\r\nimport Dashboard from './components/Dashboard/Dashboard'\r\nimport MessageDetails from './components/Dashboard/Messaging/MessageDetails'\r\nimport SignIn from './components/Auth/SignIn'\r\nimport SignUp from './components/Auth/SignUp'\r\nimport ProjectDetails from './components/Home/Projects/ProjectDetails'\r\nimport CreateProject from './components/Home/Projects/CreateProject'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    document.title = 'Ahmed Eldessouki'\r\n  })\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/dashboard\" component={Dashboard} />\r\n          <Route path=\"/projects/:id\" component={ProjectDetails} />\r\n          <Route path=\"/messages/:id\" component={MessageDetails} />\r\n          <Route path=\"/signin\" component={SignIn} />\r\n          <Route path=\"/SignUp\" component={SignUp} />\r\n          <Route path=\"/create-project\" component={CreateProject} />\r\n          <Route path=\"/edit/:id\" component={CreateProject} />\r\n          <Redirect from=\"*\" to=\"/\" />\r\n        </Switch>\r\n      </BrowserRouter>\r\n      <ToastContainer autoClose={2000} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n",
    "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n",
    "const initState = {\n  authError: null\n};\n\nconst AuthReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      console.log('login Success');\n      return {\n        ...state,\n        authError: null\n      };\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: action.err.message\n      };\n    case 'SIGNOUT_SUCCESS':\n      console.log('SIGN OUT SUCCESS');\n      return {\n        ...state,\n        authError: null\n      };\n    case 'SIGNOUT_FAILED':\n      console.log('Sign Out Error', action.err.message);\n      return {\n        ...state,\n        authError: action.err.message\n      };\n    case 'SIGNUP_SUCCESS':\n      // console.log('signUp Successful')\n      return{\n        ...state,\n        authError: null\n      }\n      case 'SIGNUP_ERROR':\n      console.log('signUp failed')\n      return{\n        ...state,\n        authError: action.err.message\n      }\n    default:\n      return state;\n  }\n};\n\nexport default AuthReducer",
    "const initState ={\n  projects:[\n    {id:1, projectName: 'cong dong', description: 'jasd asfddasf '},\n    {id:2, projectName: 'cong dong', description: 'jasd asfddasf '},\n    {id:3, projectName: 'cong dong', description: 'jasd asfddasf '}\n  ]\n};\n\nconst ProjectReducer = (state = initState,action) => {\n  switch(action.type){\n    case 'CREATE_PROJECT':\n      console.log('project has been created', action.project);\n      return {...state};\n    case 'CREATE_PROJECT_ERROR':\n      console.log('create project error', action.err);\n      return {\n        ...state,\n        projError: action.err.message\n      };\n    case 'PROJECT_UPDATED':\n      console.log('project successfully updated', action.project);\n      return {...state};\n    case 'PROJECT_NOT_UPDATED':\n      console.log('project did not update', action.err);\n      return {\n        ...state,\n        projError: action.err.message\n      };\n    case 'PROJECT_DELETED':\n      console.log('project successfully deleted');\n      return null ;\n    case 'PROJECT_DELETE_ERROR':\n      console.log('project still exists', action.err);\n      return {\n        projError: action.err.message\n      };\n    default:\n      return state;\n  }\n};\n\nexport default ProjectReducer\n",
    "const initState ={\n  contError:null,\n  contactedMe:[\n    {id:1, projectName: 'cong dong', description: 'jasd asfddasf '},\n    {id:2, projectName: 'cong dong', description: 'jasd asfddasf '},\n    {id:3, projectName: 'cong dong', description: 'jasd asfddasf '}\n  ]\n};\nconst ContactedMeReducer = (state = initState,action) => {\n  switch(action.type){\n    case 'MESSAGE_SENT':\n      // console.log('Message sent', action.contact);\n      return {\n        ...state,\n        contError: null\n      };\n    case 'MESSAGE_NOT_SENT':\n      // console.log('Message cannot be sent', action.err);\n      return {\n        ...state,\n        contError: action.err.message\n      };\n    case 'MESSAGE_DELETED':\n      console.log('Message no longer exists');\n      return null;\n    case 'MESSAGE_DELETE_ERROR':\n      console.log('Message cannot be sent', action.err);\n      return {\n        ...state,\n        contError: action.err.message\n      };\n    default:\n      return state;\n  }\n};\n\nexport default ContactedMeReducer\n",
    "const initState ={\n  projects:[\n    {id:1, projectName: 'cong dong', description: 'jasd asfddasf '},\n    {id:2, projectName: 'cong dong', description: 'jasd asfddasf '},\n    {id:3, projectName: 'cong dong', description: 'jasd asfddasf '}\n  ],\n  projError: null,\n  downloadUrls:[]\n};\n\nconst uploadLogoReducer = (state = initState,action) => {\n  switch(action.type){\n    case 'PROJ_LOGO_ADDED':\n      console.log('PROJ_LOGO_ADDED', action.file, action.downloadUrl);\n      return {\n        ...state,\n        downloadUrls: [action.downloadUrl.toString()]\n      };\n    case 'PROJ_LOGO_NOT_ADDED':\n      console.log('PROJ_LOGO_NOT_ADDED', action.err);\n      return {\n        ...state,\n        projError: action.err.message\n      };\n    // case 'PROJ_LOGO_URL':\n    //   console.log('PROJ_LOGO_URL', action.res);\n    //   return state;\n    // case 'PROJ_LOGO_NOT_URL':\n    //   console.log('PROJ_LOGO_NOT_URL', action.err);\n    //   return {\n    //     ...state,\n    //     projError: action.err.message\n    //   };\n    default:\n      return state;\n  }\n};\n\nexport default uploadLogoReducer\n",
    "const NotificationReducer = (state,action) => {\n  switch(action.type){\n    case 'NOTIFICATION_DELETED':\n      console.log('NOTIFICATION_DELETED');\n      return null\n    case 'NOTIFICATION_DELETE_ERROR':\n      console.log('NOTIFICATION_DELETE_ERROR', action.err);\n      return {\n        notificationError: action.err.message\n      };\n    default:\n      return null;\n  }\n};\n\nexport default NotificationReducer\n",
    "import AuthReducer from './AuthReducer'\nimport ProjectReducer from './ProjectReducer'\nimport ContactedMeReducer from './ContactedMeReducer'\nimport uploadLogoReducer from './uploadLogoReducer'\nimport {combineReducers} from 'redux'\nimport {firestoreReducer} from 'redux-firestore'\nimport {firebaseReducer} from 'react-redux-firebase'\nimport NotificationReducer from \"./NotificationReducer\";\n\nconst RootReducer = combineReducers({\n  auth: AuthReducer,\n  project: ProjectReducer,\n  contactedMe: ContactedMeReducer,\n  projectLogos:uploadLogoReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n  notifications: NotificationReducer\n});\n\nexport default RootReducer",
    "import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/storage'\r\nvar config = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: 'ahmedeldessouki-a7488.firebaseapp.com',\r\n  databaseURL: process.env.REACT_APP_DB_URL,\r\n  projectId: 'ahmedeldessouki-a7488',\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  storage: process.env.REACT_APP_STORAGE,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n}\r\n\r\nfirebase.initializeApp(config)\r\nfirebase.firestore()\r\n\r\nexport default firebase\r\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport RootReducer from './Store/Reducer/RootReducer'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {reduxFirestore, getFirestore} from 'redux-firestore'\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase'\nimport firebaseConfig from './Config/FirebaseConfig'\n\nconst store = createStore(RootReducer, compose(\n  applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n  reduxFirestore(firebaseConfig),\n  reactReduxFirebase(firebaseConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n  )\n);\nstore.firebaseAuthIsReady.then(()=> {\n\n  ReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n});"
  ],
  "sourceRoot": ""
}
